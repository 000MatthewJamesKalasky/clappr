{"version":3,"sources":["webpack://DashShakaPlayback/webpack/universalModuleDefinition","webpack://DashShakaPlayback/webpack/bootstrap","webpack://DashShakaPlayback/./src/clappr-dash-shaka-playback.js","webpack://DashShakaPlayback/external {\"amd\":\"clappr\",\"commonjs\":\"clappr\",\"commonjs2\":\"clappr\",\"root\":\"Clappr\"}","webpack://DashShakaPlayback/external \"shaka\""],"names":["root","factory","exports","module","require","define","amd","window","__WEBPACK_EXTERNAL_MODULE__1__","__WEBPACK_EXTERNAL_MODULE__2__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","_clappr","_shakaPlayer","DashShakaPlayback","_ref","_classCallCheck","this","_len","arguments","length","args","Array","_key","_this","_possibleConstructorReturn","__proto__","getPrototypeOf","apply","concat","_levels","_pendingAdaptationEvent","_isShakaReadyState","_minDvrSize","options","shakaMinimumDvrSize","HTML5Video","_duration","shakaPlayerInstance","getMediaElement","currentTime","seekRange","start","shaka","player","Player","version","_player","id","_this2","_currentLevelId","isAuto","trigger","Events","PLAYBACK_LEVEL_SWITCH_START","configure","abr","enabled","PLAYBACK_LEVEL_SWITCH_END","selectTrack","videoTracks","filter","getPlaybackType","end","getManifest","presentationTimeline","getStats","estimatedBandwidth","resource","mimeType","undefined","polyfill","installAll","browserSupported","isBrowserSupported","resourceParts","split","match","indexOf","SHAKA_READY","Date","getPresentationStartTime","status","PLAYBACK_DVR","PLAYBACK_STATS_ADD","dvr","time","Log","warn","dvrEnabled","_updateDvr","_startTime","_get","_setup","isReady","_stopped","_src","el","src","_startTimeUpdateTimer","once","play","_this3","_stopTimeUpdateTimer","_timeUpdateTimer","setInterval","_onTimeUpdate","clearInterval","PLAYBACK_READY","event","error","highDefinition","_this4","sendStatsId","_sendStats","unload","then","catch","isLive","track","type","selectTextTrack","Error","selectVariantTrack","startsWith","_onAdaptation","isEnable","textTracks","_shakaTTVisible","from","kind","forEach","_ccIsSetup","hasClosedCaptionsTracks","PLAYBACK_SUBTITLE_AVAILABLE","trackId","closedCaptionsTrackId","_this5","destroy","_destroy","_this6","_createPlayer","_options","shakaConfiguration","shakaOnBeforeLoad","load","_loaded","e","_setupError","addEventListener","_onError","_onBuffering","update","current","getCurrentTime","total","getDuration","firstFragDateTime","getProgramDateTime","_lastTimeUpdate","PLAYBACK_TIMEUPDATE","buffering","PLAYBACK_BUFFERING","PLAYBACK_BUFFERFULL","_onShakaReady","_startToSendStats","_fillLevels","_checkForClosedCaptions","map","videoTrack","label","height","reverse","PLAYBACK_LEVELS_AVAILABLE","levels","_this7","intervalMs","shakaSendStatsInterval","err","shakaError","videoError","_ref2","detail","category","code","severity","errorData","description","level","util","Severity","CRITICAL","PlayerError","Levels","FATAL","WARN","raw","formattedError","createError","PLAYBACK_ERROR","activeVideo","active","debug","PLAYBACK_HIGHDEFINITIONUPDATE","PLAYBACK_BITRATE","bandwidth","width","bitrate","videoBandwidth","settings","left","seekEnabled","isSeekEnabled","PLAYBACK_SETTINGSUPDATE","getTextTracks","getVariantTracks","language","tracks","closedCaptionsTracks","showingTrack","find","info","setTextTrackVisibility","_enableShakaTextTrack","_ccTrackId","PLAYBACK_SUBTITLE_CHANGED"],"mappings":"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","file":"dash-shaka-playback.external.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"clappr\"), require(\"shaka\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"clappr\", \"shaka\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"DashShakaPlayback\"] = factory(require(\"clappr\"), require(\"shaka\"));\n\telse\n\t\troot[\"DashShakaPlayback\"] = factory(root[\"Clappr\"], root[\"shaka\"]);\n})(window, function(__WEBPACK_EXTERNAL_MODULE__1__, __WEBPACK_EXTERNAL_MODULE__2__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"dist/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import {HTML5Video, Log, Events, PlayerError} from 'clappr'\nimport shaka from 'shaka-player'\n\nconst SEND_STATS_INTERVAL_MS = 30 * 1e3\nconst DEFAULT_LEVEL_AUTO = -1\n\nclass DashShakaPlayback extends HTML5Video {\n  static get Events () {\n    return {\n      SHAKA_READY: 'shaka:ready'\n    }\n  }\n\n  static canPlay (resource, mimeType = '') {\n    shaka.polyfill.installAll()\n    let browserSupported = shaka.Player.isBrowserSupported()\n    let resourceParts = resource.split('?')[0].match(/.*\\.(.*)$/) || []\n    return browserSupported && ((resourceParts[1] === 'mpd') || mimeType.indexOf('application/dash+xml') > -1)\n  }\n\n  get name () {\n    return 'dash_shaka_playback'\n  }\n\n  get shakaVersion () {\n    return shaka.player.Player.version\n  }\n\n  get shakaPlayerInstance () {\n    return this._player\n  }\n\n  get levels () {\n    return this._levels\n  }\n\n  get seekRange() {\n    return this.shakaPlayerInstance.seekRange()\n  }\n\n  set currentLevel (id) {\n    this._currentLevelId = id\n    let isAuto = this._currentLevelId === DEFAULT_LEVEL_AUTO\n\n    this.trigger(Events.PLAYBACK_LEVEL_SWITCH_START)\n    if (!isAuto) {\n      this._player.configure({abr: {enabled: false}})\n      this._pendingAdaptationEvent = true\n      this.selectTrack(this.videoTracks.filter((t) => t.id === this._currentLevelId)[0])\n    }\n    else {\n      this._player.configure({abr: {enabled: true}})\n      this.trigger(Events.PLAYBACK_LEVEL_SWITCH_END)\n    }\n  }\n\n  get currentLevel () {\n    return this._currentLevelId || DEFAULT_LEVEL_AUTO\n  }\n\n  get dvrEnabled() {\n    return this._duration >= this._minDvrSize && this.getPlaybackType() === 'live'\n  }\n\n  getDuration() {\n    return this._duration\n  }\n\n  get _duration() {\n    if (!this.shakaPlayerInstance) return 0\n\n    return this.seekRange.end - this.seekRange.start\n  }\n\n  getCurrentTime() {\n    return this.shakaPlayerInstance.getMediaElement().currentTime - this.seekRange.start\n  }\n\n  get _startTime() {\n    return this.seekRange.start\n  }\n\n  get presentationTimeline() {\n    return this.shakaPlayerInstance.getManifest().presentationTimeline\n  }\n\n  get bandwidthEstimate() {\n    if (!this.shakaPlayerInstance) return\n    return this.shakaPlayerInstance.getStats().estimatedBandwidth\n  }\n\n  constructor (...args) {\n    super(...args)\n    this._levels = []\n    this._pendingAdaptationEvent = false\n    this._isShakaReadyState = false\n\n    this._minDvrSize = typeof (this.options.shakaMinimumDvrSize) === 'undefined' ? 60 : this.options.shakaMinimumDvrSize\n  }\n\n  getProgramDateTime() {\n    return new Date((this.presentationTimeline.getPresentationStartTime() + this.seekRange.start) * 1000)\n  }\n\n  _updateDvr(status) {\n    this.trigger(Events.PLAYBACK_DVR, status)\n    this.trigger(Events.PLAYBACK_STATS_ADD, { 'dvr': status })\n  }\n\n  seek(time) {\n    if (time < 0) {\n      Log.warn('Attempt to seek to a negative time. Resetting to live point. Use seekToLivePoint() to seek to the live point.')\n      time = this._duration\n    }\n    // assume live if time within 3 seconds of end of stream\n    this.dvrEnabled && this._updateDvr(time < this._duration-3)\n    time += this._startTime\n    super.seek(time)\n  }\n\n  pause() {\n    super.pause()\n\n    if (this.dvrEnabled)\n      this._updateDvr(true)\n  }\n\n  play () {\n    if (!this._player) {\n      this._setup()\n    }\n\n    if (!this.isReady) {\n      this.once(DashShakaPlayback.Events.SHAKA_READY, this.play)\n      return\n    }\n\n    this._stopped = false\n    this._src = this.el.src\n    super.play()\n    this._startTimeUpdateTimer()\n  }\n\n  _startTimeUpdateTimer() {\n    this._stopTimeUpdateTimer()\n    this._timeUpdateTimer = setInterval(() => {\n      this._onTimeUpdate()\n    }, 100)\n  }\n\n  _stopTimeUpdateTimer() {\n    this._timeUpdateTimer && clearInterval(this._timeUpdateTimer)\n  }\n\n  // skipping HTML5Video `_setupSrc` (on tag video)\n  _setupSrc () {}\n\n  // skipping ready event on video tag in favor of ready on shaka\n  _ready () {\n    // override with no-op\n  }\n\n  _onShakaReady() {\n    this._isShakaReadyState = true\n    this.trigger(DashShakaPlayback.Events.SHAKA_READY)\n    this.trigger(Events.PLAYBACK_READY, this.name)\n  }\n\n  get isReady () {\n    return this._isShakaReadyState\n  }\n\n  // skipping error handling on video tag in favor of error on shaka\n  error (event) {\n    Log.error('an error was raised by the video tag', event, this.el.error)\n  }\n\n  isHighDefinitionInUse () {\n    return !!this.highDefinition\n  }\n\n  stop () {\n    this._stopTimeUpdateTimer()\n    clearInterval(this.sendStatsId)\n    this._stopped = true\n\n    if (this._player) {\n      this._sendStats()\n\n      this._player.unload().then(() => {\n        super.stop()\n        this._player = null\n        this._isShakaReadyState = false\n      }).catch(() => {\n        Log.error('shaka could not be unloaded')\n      })\n    } else {\n      super.stop()\n    }\n  }\n\n  get textTracks () {\n    return this.isReady && this._player.getTextTracks()\n  }\n\n  get audioTracks () {\n    return this.isReady && this._player.getVariantTracks().filter((t) => t.mimeType.startsWith('audio/'))\n  }\n\n  get videoTracks () {\n    return this.isReady && this._player.getVariantTracks().filter((t) => t.mimeType.startsWith('video/'))\n  }\n\n  getPlaybackType () {\n    return (this.isReady && this._player.isLive() ? 'live' : 'vod') || ''\n  }\n\n  selectTrack (track) {\n    if (track.type === 'text') {\n      this._player.selectTextTrack(track)\n    } else if (track.type === 'variant') {\n      this._player.selectVariantTrack(track)\n      if (track.mimeType.startsWith('video/')) {\n        // we trigger the adaptation event here\n        // because Shaka doesn't trigger its event on \"manual\" selection.\n        this._onAdaptation()\n      }\n    } else {\n      throw new Error('Unhandled track type:', track.type)\n    }\n  }\n\n  /**\n   * @override\n   */\n  get closedCaptionsTracks() {\n    let id = 0\n    let trackId = () => { return id++ }\n    let tracks = this.textTracks || []\n\n    return tracks\n      .filter(track => track.kind === 'subtitle')\n      .map(track => { return {id: trackId(), name: track.label || track.language, track: track} })\n  }\n\n  /**\n   * @override\n   */\n  get closedCaptionsTrackId() {\n    return super.closedCaptionsTrackId\n  }\n\n  /**\n   * @override\n   */\n  set closedCaptionsTrackId(trackId) {\n    if (!this._player) {\n      return\n    }\n\n    let tracks = this.closedCaptionsTracks\n    let showingTrack\n\n    // Note: -1 is for hide all tracks\n    if (trackId !== -1) {\n      showingTrack = tracks.find(track => track.id === trackId)\n      if (!showingTrack) {\n        Log.warn(`Track id \"${trackId}\" not found`)\n        return\n      }\n      if (this._shakaTTVisible && showingTrack.track.active === true) {\n        Log.info(`Track id \"${trackId}\" already showing`)\n        return\n      }\n    }\n\n    if (showingTrack) {\n      this._player.selectTextTrack(showingTrack.track)\n      this._player.setTextTrackVisibility(true)\n      this._enableShakaTextTrack(true)\n    } else {\n      this._player.setTextTrackVisibility(false)\n      this._enableShakaTextTrack(false)\n    }\n\n    this._ccTrackId = trackId\n    this.trigger(Events.PLAYBACK_SUBTITLE_CHANGED, {\n      id: trackId\n    })\n  }\n\n  _enableShakaTextTrack(isEnable) {\n    // Shaka player use only one TextTrack object with video element to handle all text tracks\n    // It must be enabled or disabled in addition to call selectTextTrack()\n    if (!this.el.textTracks) {\n      return\n    }\n\n    this._shakaTTVisible = isEnable\n\n    Array.from(this.el.textTracks)\n      .filter(track => track.kind === 'subtitles')\n      .forEach(track => track.mode = isEnable === true ? 'showing' : 'hidden')\n  }\n\n  _checkForClosedCaptions() {\n    if (this._ccIsSetup) {\n      return\n    }\n\n    if (this.hasClosedCaptionsTracks) {\n      this.trigger(Events.PLAYBACK_SUBTITLE_AVAILABLE)\n      const trackId = this.closedCaptionsTrackId\n      this.closedCaptionsTrackId = trackId\n    }\n    this._ccIsSetup = true\n  }\n\n  destroy () {\n    this._stopTimeUpdateTimer()\n    clearInterval(this.sendStatsId)\n\n    if (this._player) {\n      this._player.destroy()\n        .then(() => this._destroy())\n        .catch(() => {\n          this._destroy()\n          Log.error('shaka could not be destroyed')\n        })\n    } else {\n      this._destroy()\n    }\n\n    super.destroy()\n  }\n\n  _setup () {\n    this._isShakaReadyState = false\n    this._ccIsSetup = false\n    this._player = this._createPlayer()\n    this._options.shakaConfiguration && this._player.configure(this._options.shakaConfiguration)\n    this._options.shakaOnBeforeLoad && this._options.shakaOnBeforeLoad(this._player)\n\n    let playerLoaded = this._player.load(this._options.src)\n    playerLoaded.then(() => this._loaded())\n      .catch((e) => this._setupError(e))\n  }\n\n  _createPlayer () {\n    let player = new shaka.Player(this.el)\n    player.addEventListener('error', this._onError.bind(this))\n    player.addEventListener('adaptation', this._onAdaptation.bind(this))\n    player.addEventListener('buffering', this._onBuffering.bind(this))\n    return player\n  }\n\n  _onTimeUpdate() {\n    if (!this.shakaPlayerInstance) return\n\n    let update = {\n      current: this.getCurrentTime(),\n      total: this.getDuration(),\n      firstFragDateTime: this.getProgramDateTime()\n    }\n    let isSame = this._lastTimeUpdate && (\n      update.current === this._lastTimeUpdate.current &&\n      update.total === this._lastTimeUpdate.total)\n    if (isSame)\n      return\n\n    this._lastTimeUpdate = update\n    this.trigger(Events.PLAYBACK_TIMEUPDATE, update, this.name)\n  }\n\n  _onBuffering (e) {\n    if (this._stopped) return\n    let event = e.buffering ? Events.PLAYBACK_BUFFERING : Events.PLAYBACK_BUFFERFULL\n    this.trigger(event)\n  }\n\n  _loaded () {\n    this._onShakaReady()\n    this._startToSendStats()\n    this._fillLevels()\n    this._checkForClosedCaptions()\n  }\n\n  _fillLevels () {\n    if (this._levels.length === 0) {\n      this._levels = this.videoTracks.map((videoTrack) => { return {id: videoTrack.id, label: `${videoTrack.height}p`} }).reverse()\n      this.trigger(Events.PLAYBACK_LEVELS_AVAILABLE, this.levels)\n    }\n  }\n\n  _startToSendStats () {\n    const intervalMs = this._options.shakaSendStatsInterval || SEND_STATS_INTERVAL_MS\n    this.sendStatsId = setInterval(() => this._sendStats(), intervalMs)\n  }\n\n  _sendStats () {\n    this.trigger(Events.PLAYBACK_STATS_ADD, this._player.getStats())\n  }\n\n  _setupError (err) {\n    this._onError(err)\n  }\n\n  _onError (err) {\n    const error = {\n      shakaError: err,\n      videoError: this.el.error\n    }\n\n    let { category, code, severity } = error.shakaError.detail || error.shakaError\n\n    if (error.videoError || !code && !category) return super._onError()\n\n    const isCritical = severity === shaka.util.Error.Severity.CRITICAL\n    const errorData = {\n      code: `${category}_${code}`,\n      description: `Category: ${category}, code: ${code}, severity: ${severity}`,\n      level: isCritical ? PlayerError.Levels.FATAL : PlayerError.Levels.WARN,\n      raw: err\n    }\n    const formattedError = this.createError(errorData)\n    Log.error('Shaka error event:', formattedError)\n    this.trigger(Events.PLAYBACK_ERROR, formattedError)\n  }\n\n\n  _onAdaptation () {\n    let activeVideo = this.videoTracks.filter((t) => t.active === true)[0]\n\n    this._fillLevels()\n\n    // update stats that may have changed before we trigger event\n    // so that user can rely on stats data when handling event\n    this._sendStats()\n\n    if (this._pendingAdaptationEvent) {\n      this.trigger(Events.PLAYBACK_LEVEL_SWITCH_END)\n      this._pendingAdaptationEvent = false\n    }\n\n    Log.debug('an adaptation has happened:', activeVideo)\n    this.highDefinition = (activeVideo.height >= 720)\n    this.trigger(Events.PLAYBACK_HIGHDEFINITIONUPDATE, this.highDefinition)\n    this.trigger(Events.PLAYBACK_BITRATE, {\n      bandwidth: activeVideo.bandwidth,\n      width: activeVideo.width,\n      height: activeVideo.height,\n      level: activeVideo.id,\n      bitrate: activeVideo.videoBandwidth\n    })\n  }\n\n  _updateSettings() {\n    if (this.getPlaybackType() === 'vod')\n      this.settings.left = ['playpause', 'position', 'duration']\n    else if (this.dvrEnabled)\n      this.settings.left = ['playpause']\n    else\n      this.settings.left = ['playstop']\n\n    this.settings.seekEnabled = this.isSeekEnabled()\n    this.trigger(Events.PLAYBACK_SETTINGSUPDATE)\n  }\n\n  _destroy () {\n    this._isShakaReadyState = false\n    Log.debug('shaka was destroyed')\n  }\n}\n\nexport default DashShakaPlayback\n","module.exports = __WEBPACK_EXTERNAL_MODULE__1__;","module.exports = __WEBPACK_EXTERNAL_MODULE__2__;"],"sourceRoot":""}